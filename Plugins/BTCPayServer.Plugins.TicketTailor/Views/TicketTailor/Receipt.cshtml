@using BTCPayServer.Client.Models
@model BTCPayServer.Plugins.TicketTailor.TicketTailorController.TicketReceiptPage
@inject ContentSecurityPolicies contentSecurityPolicies
@using BTCPayServer.Security
@using NBitcoin
@{
    var nonce = RandomUtils.GetUInt256().ToString().Substring(0, 32);
    contentSecurityPolicies.Add("script-src", $"'nonce-{nonce}'");
    contentSecurityPolicies.AllowUnsafeHashes();
    Layout = "_LayoutSimple";
    var reloadPage = false;
}
<style>
    footer {
        display: none;
    }
</style>
<div class="container d-flex h-100">
    <div class="justify-content-center align-self-center text-center mx-auto px-2 w-100 m-auto">
        <partial name="_StatusMessage"/>
        <div class="mb-4 d-print-none d-flex justify-content-center">

            <h1 >Ticket Receipt</h1>
            <button class="btn btn-link d-print-none" id="btnPrint">Print</button>
        </div>
        @if (Model.Status == InvoiceStatus.Processing)
        {
            reloadPage = true;
            <div class="alert alert-info">
                The invoice has detected a payment but is still waiting to be settled. This page will refresh periodically until it is settled.

            </div>
        }
        else if (Model.Status != InvoiceStatus.Settled)
        {
            <div class="alert alert-danger">
                The invoice is not settled.
            </div>
        }
        else if (Model.Ticket is null)
        {
            
            reloadPage = true;
            <div class="alert alert-warning">
                The invoice is settled but the ticket has not been issued yet. This page will refresh periodically until it is issued.
            </div>
        }
        else
        {
            var specificTicketName = Model.Settings?.SpecificTickets?.FirstOrDefault(ticket => ticket.TicketTypeId == Model.TicketType.Id)?.Name ?? Model.TicketType.Name;
            
            <div class="row mb-4">
                <div class="col col-12 col-lg-6 mb-md-0 mb-sm-4">
                    <div class="bg-tile h-100 m-0 p-3 p-sm-5 rounded">
                        <h2 class="h4 mb-3">Ticket Details</h2>
                        <div class="d-flex mb-4">
                            <div class="col-6 px-1">
                                <img src="@Model.Ticket.QrCodeUrl" alt="Please ensure you can see this QR barcode" class="w-100">
                            </div>
                            <div class="col-6 px-1 py-4">
                                <img src="@Model.Ticket.BarcodeUrl" alt="Please ensure you can see this barcode" class="w-100">
                            </div>
                        </div>
                        <div class="d-flex d-print-inline-block flex-column mb-4 ">
                            <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">@Model.Ticket.Barcode</dt> <dd class="order-1 order-sm-2 ">TICKET CODE</dd>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Ticket.Reference))
                        {
                            <div class="d-flex d-print-inline-block flex-column mb-4 px-4 ">
                                <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">@Model.Ticket.Reference</dt> <dd class="order-1 order-sm-2 ">REFERENCE</dd>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.Ticket.FullName))
                        {
                            <div class="d-flex d-print-inline-block flex-column ">
                                <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">@Model.Ticket.FullName</dt> <dd class="order-1 order-sm-2 ">ATTENDEE NAME</dd>
                            </div>
                        }
                        <div class="d-flex d-print-inline-block flex-column ">
                            <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">@specificTicketName</dt> <dd class="order-1 order-sm-2 ">TICKET TYPE</dd>
                        </div>
                    </div>
                </div>
                <div class="col col-12 col-lg-6 mb-md-0 mb-sm-4">
                    <div class="bg-tile h-100 m-0 p-3 p-sm-5 rounded">
                        <h2 class="h4 mb-3 d-print-none">Event Details</h2>
                        <div class="d-flex d-print-inline-block flex-column mb-4 ">
                            <dt class="h3 fw-semibold text-nowrap text-print-default order-2 order-sm-1 ">@Model.Event.Title</dt> <dd class="order-1 order-sm-2 ">EVENT</dd>
                        </div>
                        <div class="d-flex d-print-inline-block flex-column mb-4 ">
                            <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">
                                <a href="@Model.Event.Url" style="word-wrap: break-word;" target="_blank">@Model.Event.Url</a>
                            </dt> <dd class="order-1 order-sm-2 ">EVENT URL</dd>
                        </div>
                        <div class="d-flex d-print-inline-block flex-column mb-4 ">
                            <dt class="h3 fw-semibold  text-print-default order-2 order-sm-1 ">@Model.Event.Start.Formatted - @Model.Event.EventEnd.Formatted</dt>
                            <dd class="order-1 order-sm-2 ">Date</dd>
                        </div>
                        <div class="d-flex d-print-inline-block flex-column ">
                            <dt class="h3 fw-semibold text-print-default order-2 order-sm-1 ">@Model.Event.Venue.Name</dt>
                            <dd class="order-1 order-sm-2 ">Venue</dd>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="powered__by__btcpayserver col-12">
                Powered by <a target="_blank" href="https://github.com/btcpayserver/btcpayserver" rel="noreferrer noopener">BTCPay Server</a>
            </div>
        </div>
    </div>
</div>

@if (reloadPage)
{
    <script type="text/javascript" nonce="@nonce">       
        setTimeout(function(){
            
            window.location.reload();
        }, 3000); 
    </script>
}
<script type="text/javascript" nonce="@nonce">
    
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("btnPrint").addEventListener("click", function (){
            window.print();
        });
    });
    
</script>
